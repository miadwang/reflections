What happens when you initialize a repository? Why do you need to do it?

  Git created a .git directory and store my git information in it. Doing so can start the version tracking.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  Staging area is between working directory and repository. It lets you decide which files you'd like to keep tracking.

How can you use the staging area to make sure you have one commit per logical
change?

  I will put only the files related per logical into staging area.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  If you want to add another version of the project, or make some experimental changes. It helps to avoid the jumping between different commits and label the versions clear.

How do the diagrams help you visualize the branch structure?

  It helps me to see the whole picture. Where am I, how others and I made changes.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

  After merging, the two branch tip commits merged into a single commit. That single commit becomes the new tip of the checked out branch. Changes of the merged commits compared to their same parent are both saved. The commits of each branch can both be reached from the merged commit. As the single commit is a new branch tip and has two parents which are the two merged commit. We should draw two arrows from the single commit to the two merged commits.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

  Pros: Automatic merging show conflicts. It can keet the former commits history. Cons: Sometimes conflicts may be a lot. It needs some discussion before merging. When people discuss, they might want to merge manually.
